# Generated by Django 5.0 on 2024-05-08 01:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('estimation', '0015_wtfmethod_ratio_wtfmethod_yearly_recharge'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CropCoefficient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('kc_a1', models.FloatField()),
                ('kc_a2', models.FloatField()),
                ('kc_a3', models.FloatField()),
                ('kc_a4', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CurveNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('cn1', models.FloatField()),
                ('cn2', models.FloatField()),
                ('cn3', models.FloatField()),
                ('cn4', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='EtoRsData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('Tmax_r', models.FloatField()),
                ('Tmin_r', models.FloatField()),
                ('RH_r', models.FloatField()),
                ('WS_r', models.FloatField()),
                ('SR_r', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EtoShData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('Tmax_r', models.FloatField()),
                ('Tmin_r', models.FloatField()),
                ('RH_r', models.FloatField()),
                ('WS_r', models.FloatField()),
                ('SH_r', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LandUseArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('a1', models.FloatField()),
                ('a2', models.FloatField()),
                ('a3', models.FloatField()),
                ('a4', models.FloatField()),
                ('a5', models.FloatField()),
                ('a6', models.FloatField()),
                ('a7', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='RechargeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('re_previous', models.FloatField()),
                ('re_water_body', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RHValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SolarRadiation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='TMeanValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
            ],
        ),
        migrations.RemoveField(
            model_name='wbmethoddata',
            name='climate_data_full',
        ),
        migrations.RemoveField(
            model_name='wbmethoddata',
            name='climate_data_pm_sh',
        ),
        migrations.RemoveField(
            model_name='wbmethoddata',
            name='c_values',
        ),
        migrations.RemoveField(
            model_name='wbmethoddata',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='wbmethoddata',
            name='rs_value',
        ),
        migrations.RemoveField(
            model_name='wbmethoddata',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='catchment_area',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='classification',
            field=models.CharField(blank=True, choices=[(1, 'Arid (P ≤ 500 mm)'), (2, 'Semi-arid (500 < P < 1000)'), (3, 'Semi-humid (1000 < P < 1500)'), (4, 'Humid (P > 1500)')], max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='rlc',
            field=models.CharField(blank=True, choices=[(1, 'Arid (P ≤ 500 mm)'), (2, 'Semi-arid (500 < P < 1000)'), (3, 'Semi-humid (1000 < P < 1500)'), (4, 'Humid (P > 1500)')], max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='rp',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='spyielddata',
            name='wtf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sp_yield_data', to='estimation.wtfmethod'),
        ),
        migrations.AlterField(
            model_name='wbmethoddata',
            name='elevation',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='wbmethoddata',
            name='eto_method',
            field=models.CharField(choices=[(1, 'Fao combined pm method'), (2, 'PM SH method)'), (3, 'PM no sh and rs method'), (4, 'FAO Blaney-Criddle method'), (5, 'Makkink method'), (6, 'Hargreaves method'), (7, 'Hansen method'), (8, 'Turc method'), (9, 'Priestly taylor method'), (10, 'Jensen haise method'), (11, 'Abtew method'), (12, 'De bruin method')], default=1, max_length=100),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='wbmethoddata',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='wbmethoddata',
            name='temperature',
            field=models.ManyToManyField(blank=True, related_name='wb_temperature', to='estimation.temperature'),
        ),
        migrations.AlterField(
            model_name='wbmethoddata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='kc_value',
            field=models.ManyToManyField(blank=True, related_name='wb_kc_value', to='estimation.cropcoefficient'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='cn_value',
            field=models.ManyToManyField(blank=True, related_name='wb_cn_value', to='estimation.curvenumber'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='c_value',
            field=models.ManyToManyField(blank=True, related_name='wb_c_value', to='estimation.cvalue'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='eto_rs_data',
            field=models.ManyToManyField(blank=True, related_name='wb_eto_rs_data', to='estimation.etorsdata'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='eto_sh_data',
            field=models.ManyToManyField(blank=True, related_name='wb_eto_sh_data', to='estimation.etoshdata'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='land_use_area',
            field=models.ManyToManyField(blank=True, related_name='wb_land_use_area', to='estimation.landusearea'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='p_value',
            field=models.ManyToManyField(blank=True, related_name='wb_p_value', to='estimation.pvalue'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='recharge_rate',
            field=models.ManyToManyField(blank=True, related_name='wb_recharge_rate', to='estimation.rechargerate'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='rh_value',
            field=models.ManyToManyField(blank=True, related_name='wb_rh_value', to='estimation.rhvalue'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='solar_radiation',
            field=models.ManyToManyField(blank=True, related_name='wb_solar_radiation', to='estimation.solarradiation'),
        ),
        migrations.AddField(
            model_name='wbmethoddata',
            name='t_mean_value',
            field=models.ManyToManyField(blank=True, related_name='wb_t_mean_value', to='estimation.tmeanvalue'),
        ),
        migrations.DeleteModel(
            name='ClimateDataPMFull',
        ),
        migrations.DeleteModel(
            name='ClimateDataPMSH',
        ),
    ]
